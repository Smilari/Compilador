// Analizador Sintactico: Linea 189: verificarTerminal(List.of(ASIGNACION, IGUAL), 201);
- Se integro la posibilidad de inicializar una constante con un igual ('=').


// Analizador Sintactico: Linea 93 -> 104:
boolean negativo;
if (aLexico.compararTerminal(MENOS)) {                    
	negativo = true;
	aLexico.escanear();
} else {
	negativo = false;
}
...
numero = (negativo) ? -numero : numero;

- Se posibilito la entrada de numeros negativos.


// Analizador Lexico: Linea 43:
reservadas.put("NOT", Terminal.NOT);

- Se agrego como palabra reservada 'NOT'


// Analizador Sintactico: Linea 357 -> 380:
if (aLexico.compararTerminal(NOT)) {
            aLexico.escanear();
            verificarTerminal(ABRE_PARENTESIS, 302);

            aLexico.escanear();
            condicion(base, desplazamiento);

            int posSaltoACorregir = gCodigo.getTopeMemoria() - 7;
            byte saltoACorregir = gCodigo.descargarByteVon(posSaltoACorregir);
            Map<Byte, Byte> correccionSalto = Map.of(
                    (byte) JE_OPCODE, (byte) JNE_OPCODE,
                    (byte) JNE_OPCODE, (byte) JE_OPCODE,
                    (byte) JG_OPCODE, (byte) JLE_OPCODE,
                    (byte) JGE_OPCODE, (byte) JL_OPCODE,
                    (byte) JL_OPCODE, (byte) JGE_OPCODE,
                    (byte) JLE_OPCODE, (byte) JG_OPCODE,
                    (byte) JPO_OPCODE, (byte) JP_OPCODE
            );
            gCodigo.cargarByteEn(correccionSalto.get(saltoACorregir), posSaltoACorregir);

            verificarTerminal(CIERRA_PARENTESIS, 303);
            aLexico.escanear();

        }

- Agregada la funcionalidad al 'NOT' como forma de condición (Niega la condición dentro del parentesis).


// Analizador Lexico: Linea 49:
reservadas.put("HALT", Terminal.HALT);

- Se agrego como palabra reservada 'HALT'



// Analizador Sintactico: Linea 228 -> 232:
if(aLexico.compararTerminal(HALT)){
	gCodigo.cargarByte(JMP_OPCODE);
	gCodigo.cargarEntero(0x588 - (gCodigo.getTopeMemoria() + 4)); //Fin del programa
	aLexico.escanear();
}

- Se agrego funcionalidad a 'HALT' (Termina el programa si se ejecuta).